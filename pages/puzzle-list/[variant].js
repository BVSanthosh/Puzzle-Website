import Link from 'next/link';
import styles from '../../styles/list.module.css';
import Image from 'next/image';
import { useRouter } from 'next/router';
import React, { useState, useEffect } from 'react';
import Card from 'react-bootstrap/Card';
import Col from 'react-bootstrap/Col';
import Head from 'next/head'
import Row from 'react-bootstrap/Row';
import Dropdown from 'react-bootstrap/Dropdown';

export default function PuzzleList() {

  const [puzzles, setPuzzles] = useState({});
  const [votes, setVotes] = useState({});
  const router = useRouter();
  const variant = router.query.variant;

  useEffect(() => {

     fetch(`/api/puzzles?variant=${variant}`)
         .then((response) => response.json())

          .then(data => {
            setPuzzles(data);
          });
  }, [variant]);
  
  useEffect(() => {
      const votes = [];
      for (const puzzle in puzzles) {
        const vote_amounts = fetch(`/api/puzzles/votes?pid=${encodeURIComponent(puzzles[puzzle]._id)}`).then(res => res.json()).then(res => {return {value: res.value, id: puzzles[puzzle]._id}});
        votes.push(vote_amounts);
      }
      Promise.all(votes).then(votes => {
        const fVotes = {};
        for (const vote of votes) {
          fVotes[vote.id] = vote.value;
        }
        setVotes(fVotes);
      })
  }, [puzzles]);

  return (

    <div>

      <Head>
        <title>Puzzle List</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
      </Head>

      <nav class="navbar sticky-top" style={{backgroundImage: "linear-gradient(160deg, #ea730f 0%, #fcc300 100%)", boxShadow: "0px 0px 5px #9e8a67"}}>
        <div class="container-fluid">
          <span className={styles.logo}>
            <Link className={styles.icon} href="../">
              <Image  src="/favicon.png" alt="Logo" width={50} height={50} class="d-inline-block align-text-top"/>
            </Link>

            <Link href="../home">
              <div className={styles.brand}>
              Solvesudo
              </div>
            </Link>
          </span>

          <Dropdown className={styles.menuDropdown}>
            <Dropdown.Toggle className={styles.dropHead}>
              Menu
            </Dropdown.Toggle>

            <Dropdown.Menu className={styles.dropItem}>
              <Dropdown.Item className={styles.dropItems} href="../puzzle-list/sudoku">Play Sudoku</Dropdown.Item>
              <Dropdown.Item className={styles.dropItems} href="../puzzle-list/wordoku">Play Wordoku</Dropdown.Item>
              <Dropdown.Item className={styles.dropItems} href="../create-sudoku?variant=sudoku">Create Sudoku</Dropdown.Item>
              <Dropdown.Item className={styles.dropItems} href="../create-sudoku?variant=wordoku">Create Wordoku</Dropdown.Item>
              <Dropdown.Item className={styles.dropItems} href="../leaderboard">View Leaderboard</Dropdown.Item>
            </Dropdown.Menu>
          </Dropdown>
          
        </div>
      </nav>

      {/* <p className={styles.card_Text}>You clicked {puzzles[2]?.difficulty} times</p>

      <p className={styles.card_Text}>You clicked {JSON.stringify(puzzles.length)} times</p> */}

    <div className={styles.big_container}>
      <Row xs={1} md={5}>
      {Array.from({ length: puzzles.length }).map((_, idx) => {
        
        return (
          <Col>
          <Link href={{
                pathname: "sudoku-page/",
                query: {
                    id: puzzles[idx]?._id
                }
            }}>
          <Card className={styles.container}>
            <Card.Img className={styles.card_img} variant="bottom" src="/sudoku-sc-1.png" />
            <Card.Body className={styles.card_Body}>
              <Card.Title className={styles.card_Title}>
                {puzzles[idx]?.name}
              </Card.Title>
              <Card.Text className={styles.card_Text}>
                Difficulty: {{3: "Easy", 5: "Medium", 7: "Hard"}[puzzles[idx]?.difficulty]}
              </Card.Text>
            </Card.Body>
            <Card.Footer style={{color: (votes[puzzles[idx]?._id] < 0 ? "blue" : "orange"), fontWeight: "bolder"}}>{`${votes[puzzles[idx]?._id]} ${votes[puzzles[idx]?._id] < 0 ? "ðŸ —" : "ðŸ •"}`}</Card.Footer>
          </Card>
          </Link>
        </Col>
      )})
      }
        
    </Row>
    </div>
    
    </div>
  );
};